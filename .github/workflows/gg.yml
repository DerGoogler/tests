name: Telegram CI

on:
    workflow_dispatch:
        inputs:
            message:
              required: false
              default: 'No message.'
              description: 'Message'
            buildType:
              description: "Build Type"
              type: choice
              required: true
              default: 'DebugMin'
              options:
               - 'Release'
               - 'Playstore'
               - 'ReleaseCandidate'
               - 'Beta'
               - 'Alpha'
               - 'Debug'
               - 'DebugMin'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Parse input
        run: |
            BUILD_TYPE_CASED=$(echo "${{ inputs.buildType }}" | sed 's/^\(.\)/\L\1/')
            echo "BUILD_TYPE_CASED=$BUILD_TYPE_CASED" >> $GITHUB_ENV
            printf "%b" "MESSAGE=${{ inputs.message }}" >> %GITHUB_ENV

            touch test.txt

      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

    
      - name: Get commit info and build timestamp
        id: meta
        run: |
            BUILD_DATE=$(date +"%Y-%m-%d %H:%M:%S")
            VERSION=$(git rev-list --count HEAD)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
    

      - name: Upload files to Telegram
        uses: xz-dev/TelegramFileUploader@v1.1.1
        with:
            to-who: '-1001820447155'
            message: |-
                **CI Manager**
                #ci_${{ env.VERSION }}

                Build on ${{ env.BUILD_DATE }}.

                ```${{ env.MESSAGE }}```

                Type: ${{ env.BUILD_TYPE_CASED }}
                [Workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            files: text.txt
        env:
            API_ID: ${{ secrets.API_ID }}
            API_HASH: ${{ secrets.API_HASH }}
            BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Upload built apk
        if: success() && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
            name: ${{ steps.release-name.outputs.name }}
            path: app/build/outputs/apk/${{ env.BUILD_TYPE_CASED }}/*.apk

      - name: Upload mappings
        if: success() && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
            name: mappings
            path: app/build/outputs/mapping/${{ env.BUILD_TYPE_CASED }}
